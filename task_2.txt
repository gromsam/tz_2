
Задача №2
Проведите рефакторинг, исправьте баги и продокументируйте в стиле PHPDoc код, приведённый ниже
(таблица users здесь аналогична таблице users из задачи №1).
Примечание: код написан исключительно в тестовых целях, это не "жизненный пример" :)

function load_users_data($user_ids) {
    $user_ids = explode(',', $user_ids);
    foreach ($user_ids as $user_id) {
        $db = mysqli_connect("localhost", "root", "123123", "database");
        $sql = mysqli_query($db, "SELECT * FROM users WHERE id=$user_id");
        while($obj = $sql->fetch_object()){
            $data[$user_id] = $obj->name;
        }
        mysqli_close($db);
    }
    return $data;
}
// Как правило, в $_GET['user_ids'] должна приходить строка
// с номерами пользователей через запятую, например: 1,2,17,48
$data = load_users_data($_GET['user_ids']);
foreach ($data as $user_id=>$name) {
    echo "<a href=\"/show_user.php?id=$user_id\">$name</a>";
}
Плюсом будет, если укажете, какие именно уязвимости присутствуют в исходном варианте (если таковые, на ваш взгляд, имеются),
и приведёте примеры их проявления.

=========================

Решение

1. Рефакторинг и исправление багов
- Драйвером с базой MySQL выступает PDO
- Созданы 2 класса. Для взаимодействия с базой и класс пользователя
- Создан файл конфигурации, где определены переменные и есть подключение к базе
- Сделал без композера и классы без пространства имён, ввиду непонимания бизнес логики приложения, но если это потребуется,
то легко можно мастабировать
- Ввиду того, что то ожидается в GET параметре user_ids строка c IDS пользователей по шаблону, то была разработана логика валидации:
    a. Разбитие на массив
    б. получен первый символ
    в. преобразован в INT
    г. сформирована строка из валидного массива
Это позволит сформировать валидную строку для получения данных из базы

3.

2. Уязвимости
- В данном решении есть уязвимость SQL инъекции, из GET параметра нельзя напрямую в базу передавать данные из параметра,
необходимо обработать.
- для взаимодействия с базой MySQL лучше использовать PDO, в отличии от драйвера mysqli_connect, PDO более безопасен